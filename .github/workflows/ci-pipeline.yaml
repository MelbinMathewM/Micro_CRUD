name: Build and Push Services

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-api-gateway:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install API Gateway Dependencies
        run: |
          cd api_gateway
          npm install

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push API Gateway Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest ./api_gateway
          docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest

  build-admin-service:
    runs-on: ubuntu-latest
    needs: build-api-gateway
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Admin Service Dependencies
        run: |
          cd Backend/admin_service
          npm install

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Admin Service Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/admin-service:latest ./Backend/admin_service
          docker push ${{ secrets.DOCKER_USERNAME }}/admin-service:latest

  build-auth-service:
    runs-on: ubuntu-latest
    needs: build-admin-service
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Auth Service Dependencies
        run: |
          cd Backend/auth_service
          npm install

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Auth Service Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-service:latest ./Backend/auth_service
          docker push ${{ secrets.DOCKER_USERNAME }}/auth-service:latest

  build-user-service:
    runs-on: ubuntu-latest
    needs: build-auth-service
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install User Service Dependencies
        run: |
          cd Backend/user_service
          npm install

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push User Service Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/user-service:latest ./Backend/user_service
          docker push ${{ secrets.DOCKER_USERNAME }}/user-service:latest

  build-notification-service:
    runs-on: ubuntu-latest
    needs: build-user-service
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Notification Service Dependencies
        run: |
          cd Backend/notification_service
          npm install

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Notification Service Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/notification-service:latest ./Backend/notification_service
          docker push ${{ secrets.DOCKER_USERNAME }}/notification-service:latest

  build-frontend:
    runs-on: ubuntu-latest
    needs: build-notification-service
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Frontend Dependencies
        run: |
          cd Frontend
          npm install

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Frontend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./Frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest
